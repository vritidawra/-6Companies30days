All Elements in Two Binary Search Trees
https://leetcode.com/problems/all-elements-in-two-binary-search-trees/description/
Given two binary search trees root1 and root2, return a list containing all the integers from both trees sorted in ascending order.
Example 1:

Input: root1 = [2,1,4], root2 = [1,0,3]
Output: [0,1,1,2,3,4]




SOLUTION
class Solution {
public:
    void inorder(TreeNode* root,vector<int>&i){
        if(root==NULL) return ;
        inorder(root->left,i);
        i.push_back(root->val);
        inorder(root->right,i);
        return;
    }
    vector<int> merge(vector<int>&a,vector<int>&b){
        vector<int>ans;
        int i=0,j=0;
        while(i<a.size() && j<b.size()){
            if(a[i]<b[j]){
                ans.push_back(a[i]);
                i++;
            }
            else if(a[i]>b[j]){
                ans.push_back(b[j]);
                j++;
            }
            else{
                ans.push_back(a[i]);
                ans.push_back(a[i]);
                i++;
                j++;
            }
        }
        while(i<a.size()){
            ans.push_back(a[i]);
            i++;
        }
        while(j<b.size()){
            ans.push_back(b[j]);
            j++;
        }
        return ans;
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        vector<int>i1,i2;
        inorder(root1,i1);
        inorder(root2,i2);
        vector<int>ans=merge(i1,i2);
        return ans;
    }
};
